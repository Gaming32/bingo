dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:0.2.0-rc.2"))

    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api:12.0.652")
    modCompileOnly("mezz.jei:jei-1.20.1-common-api:15.2.0.27")
    modCompileOnly("dev.emi:emi-xplat-intermediary:1.0.19+1.20.1") // Unfortunately, although the API does what I need, it does in a way that's wholly different from the other recipe vieweers
}

architectury {
    common("fabric", "forge")
}

sourceSets {
    main {
        resources {
            srcDirs += ['src/main/generated']
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
